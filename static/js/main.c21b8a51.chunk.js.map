{"version":3,"sources":["logo.svg","components/CardItem.js","components/CardList.js","components/MoviePage.js","components/LoginPage.js","components/RegisterPage.js","components/ErorPage.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","CardItem","props","state","moreText","poster_src","viewMovie","bind","showMore","url","this","movieID","window","location","href","p","document","getElementById","innerHTML","overview","substring","myLi","li","length","Card","className","style","width","margin","flex","Img","variant","src","poster_path","Body","Title","title","Text","id","onClick","Button","Footer","release_date","Component","CardList","moviesCard","cardList","map","movieCard","i","Col","sm","Container","Row","MoviePage","top_rated","rows","performSearch","searchTerm","setState","fetch","then","response","json","results","event","target","value","top","onChange","searchChangeHandler","placeholder","Spinner","animation","role","size","particlesOptions","particles","number","density","enable","value_area","LoginPage","signInEmail","signInPassword","spinnerOn","moveToSite","onPasswordChange","onEmailChange","method","headers","body","JSON","stringify","email","password","user","history","push","params","Form","FormGroup","Label","Input","type","to","RegisterPage","name","onNameChange","ErorPage","App","Router","exact","path","component","registerPage","Boolean","hostname","match","ReactDOM","render","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.c21b8a51.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.25bf045c.svg\";","import React, { Component } from 'react'\r\nimport Button from 'react-bootstrap/Button';\r\nimport CardGroup from 'react-bootstrap/CardGroup';\r\nimport { Row, Col } from 'react-bootstrap';\r\nimport Card from 'react-bootstrap/Card';\r\n\r\nexport default class CardItem extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            moreText: true,\r\n            poster_src:this.props.poster_src\r\n        }\r\n        this.viewMovie = this.viewMovie.bind(this);\r\n        this.showMore = this.showMore.bind(this);\r\n    }\r\n\r\n    viewMovie() {\r\n        const url = \"https://www.themoviedb.org/movie/\" + this.props.movieID\r\n        window.location.href = url;\r\n    }\r\n\r\n\r\n    showMore() {\r\n      var p = document.getElementById(this.props.movieID);\r\n      var li = document.getElementById(\"link\" + this.props.movieID);\r\n      if (this.state.moreText === true) {\r\n  \r\n        this.state.moreText = false\r\n        p.innerHTML = this.props.overview\r\n      } else {\r\n        p.innerHTML = this.props.overview.substring(0, 200) + \"...more\"\r\n  \r\n        this.state.moreText = true\r\n      }\r\n    }\r\n  \r\n    shrinkOverview() {\r\n      var p = document.getElementById(this.props.movieID);\r\n      p.innerHTML = this.props.overview.substring(0, 200)\r\n  \r\n    }\r\n  \r\n    componentDidMount() {\r\n      var overview = this.props.overview.substring(0, 200)\r\n      var myLi = \"link\" + this.props.movieID;\r\n      var li = document.getElementById(myLi);\r\n      var p = document.getElementById(this.props.movieID);\r\n  \r\n      if (this.props.overview.length > 200) {\r\n  \r\n        li.innerHTML = \"...more\"\r\n  \r\n      } else {\r\n  \r\n        li.innerHTML = \"\"\r\n      }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Card className='card' style={{ width: '18rem', margin: '10px', flex: 1 }}>\r\n                <Card.Img variant=\"top\"\r\n                    src={this.state.poster_src = \"https://image.tmdb.org/t/p/w185\"\r\n                        + this.props.poster_path} />\r\n                <Card.Body>\r\n                    <Card.Title>{this.props.title}</Card.Title>\r\n                    <Card.Text>\r\n                        <p id={this.props.movieID} onClick={this.showMore}>\r\n                            {this.props.overview.substring(0,200)}\r\n                            <il id={\"link\"+this.props.movieID} href=\"#\">...more</il>\r\n                        </p>                        \r\n                    </Card.Text>\r\n                    <Button variant=\"primary\" onClick={this.viewMovie} >View</Button>\r\n                </Card.Body>\r\n                <Card.Footer>\r\n                    <small className=\"text-muted\">Release Date: {this.props.release_date}</small>\r\n                </Card.Footer>\r\n            </Card>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react';\r\nimport './MovieRow.css';\r\nimport { Col, Row, Container } from 'react-bootstrap';\r\nimport Card from 'react-bootstrap/Card';\r\nimport Button from 'react-bootstrap/Button';\r\nimport CardItem from './CardItem';\r\n\r\n\r\n\r\nexport default class CardList extends Component {\r\n\r\n\r\n  render() {\r\n    let moviesCard = this.props.cardList.map((movieCard, i) => {\r\n    \r\n      return (\r\n        <Col sm=\"4\">\r\n          <CardItem \r\n            poster_src = {movieCard.poster_src}\r\n            poster_path = {movieCard.poster_path}\r\n            title = {movieCard.title}\r\n            overview = {movieCard.overview}\r\n            release_date = {movieCard.release_date}\r\n            movieID = {movieCard.id}\r\n          />\r\n        </Col>\r\n      )\r\n    })\r\n\r\n    return (\r\n      <Container>\r\n        <Row>\r\n          {moviesCard}\r\n        </Row>\r\n      </Container>\r\n    )\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport CardList from './CardList.js';\r\nimport Spinner from 'react-bootstrap/Spinner';\r\n\r\nclass MoviePage extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      top_rated: true,\r\n      rows: []\r\n    }\r\n    this.performSearch(\"\")\r\n  }\r\n\r\n  performSearch(searchTerm) {\r\n    let url;\r\n\r\n    if (searchTerm === null || searchTerm === \"\") {\r\n      this.setState({ top_rated: true })\r\n      url = 'https://api.themoviedb.org/3/movie/top_rated?api_key=6d33d7313e2e4565a9681b4714dd4dc7&language=en-US&page=1';\r\n    }\r\n    else {\r\n      this.setState({ top_rated: false })\r\n      url = 'https://api.themoviedb.org/3/search/movie?&api_key=6d33d7313e2e4565a9681b4714dd4dc7&query=' + searchTerm;\r\n    }\r\n    fetch(url)\r\n      .then(response => response.json())\r\n      .then(rows => {\r\n\r\n        this.setState({ rows: rows.results })\r\n      });\r\n  }\r\n\r\n  searchChangeHandler(event) {\r\n    const boundObject = this;\r\n    const searchTerm = event.target.value;\r\n    boundObject.performSearch(searchTerm);\r\n  }\r\n  render() {\r\n    var top;\r\n    this.state.top_rated ? top = \"Top Rated\" : top = \"\";\r\n\r\n    if (!this.state.rows.length) {\r\n      return (\r\n        <div className=\"text-center\">\r\n        <Spinner animation=\"border\" role=\"status\" size=\"\">\r\n          <span className=\"sr-only \">Loading...</span>\r\n        </Spinner>\r\n        </div>\r\n      );\r\n    }\r\n  \r\n  return(      \r\n      <div className = \"App\" >\r\n      <table className=\"titleBar\">\r\n        <tbody>\r\n          <tr>\r\n            <td>\r\n              <img className=\"App-logo\" src=\"logo192.png\" />\r\n            </td>\r\n            <td width=\"8\"></td>\r\n            <td>\r\n              <h2>The Movie Search</h2>\r\n            </td>\r\n          </tr>\r\n        </tbody>\r\n      </table>\r\n\r\n      <input onChange={this.searchChangeHandler.bind(this)} className=\"inputText\" placeholder=\"Enter Search term\" />\r\n\r\n      <h2 id=\"top\">{top}</h2>\r\n\r\n      <CardList cardList={this.state.rows} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default MoviePage;\r\n","import React, { Component } from 'react';\r\nimport MoviePage from './MoviePage.js';\r\nimport './LoginPage.css';\r\nimport { Button, Form, FormGroup, Label, Input } from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport Particles from 'react-particles-js';\r\nimport Spinner from 'react-bootstrap/Spinner';\r\n\r\nconst particlesOptions = {\r\n\tparticles: {\r\n\t\tnumber: {\r\n\t\t\tvalue: 30,\r\n\t\t\tdensity: {\r\n\t\t\t\tenable: true,\r\n\t\t\t\tvalue_area: 200\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\n\r\nclass LoginPage extends Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\tsignInEmail: '',\r\n\t\t\tsignInPassword: '',\r\n\t\t\tspinnerOn: false\r\n\t\t}\r\n\t\tthis.moveToSite = this.moveToSite.bind(this);\r\n\t\tthis.onPasswordChange = this.onPasswordChange.bind(this);\r\n\t\tthis.onEmailChange = this.onEmailChange.bind(this);\r\n\t}\r\n\r\n\tonEmailChange(event) {\r\n\t\tthis.setState({ signInEmail: event.target.value })\r\n\t}\r\n\r\n\tonPasswordChange(event) {\r\n\t\tthis.setState({ signInPassword: event.target.value })\r\n\t}\r\n\r\n\tmoveToSite() {\r\n\t\tthis.state.spinnerOn = true;\r\n\t\tfetch('https://search-movies-app.herokuapp.com/signin', {\r\n\t\t\tmethod: 'post',\r\n\t\t\theaders: { 'Content-Type': 'application/json' },\r\n\t\t\tbody: JSON.stringify({\r\n\t\t\t\temail: this.state.signInEmail,\r\n\t\t\t\tpassword: this.state.signInPassword\r\n\t\t\t})\r\n\t\t})\r\n\t\t\t.then(response => response.json())\r\n\t\t\t.then(user => {\r\n\t\t\t\tif (user.id) {\r\n\t\t\t\t\t//this.props.loadUser(user)\r\n\t\t\t\t\tthis.props.history.push('/MoviePage');\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tthis.props.history.push('/ErorPage');\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t}\r\n\r\n\trender() {\r\n\t\tif (this.state.spinnerOn) {\r\n\t\t\treturn( \r\n\t\t\t\t<Spinner animation=\"border\" role=\"status\" size=\"\" className=\"d-flex justify-content-center\">\r\n\t\t\t\t\t<span className=\"sr-only \">Loading...</span>\r\n\t\t\t\t</Spinner>\r\n\t\t\t);\r\n\t\t}\r\n\r\n\t\treturn (\r\n\t\t\t<div className=\"login-page\">\r\n\t\t\t\t<Particles className=\"particles\"\r\n\t\t\t\t\tparams={particlesOptions}\r\n\t\t\t\t/>\r\n\t\t\t\t<Form className=\"Login-form\">\r\n\t\t\t\t\t<h1 className=\"text-center\">\r\n\t\t\t\t\t\t<span className=\"font-weight-bold\">The Search-Movies</span>\r\n\t\t\t\t\t</h1>\r\n\t\t\t\t\t<h2 className=\"text-center\">Welcome </h2>\r\n\t\t\t\t\t<FormGroup>\r\n\t\t\t\t\t\t<Label>Email</Label>\r\n\t\t\t\t\t\t<Input type=\"email\" placeholder=\"Email\" id=\"inputEmail\" onChange={this.onEmailChange} />\r\n\t\t\t\t\t</FormGroup>\r\n\t\t\t\t\t<FormGroup>\r\n\t\t\t\t\t\t<Label>Password</Label>\r\n\t\t\t\t\t\t<Input type=\"password\" placeholder=\"Password\" id=\"inputPassword\" onChange={this.onPasswordChange} />\r\n\t\t\t\t\t</FormGroup>\r\n\t\t\t\t\t<Button className=\"btn-lg btn-dark btn-block\" onClick={this.moveToSite}>\r\n\t\t\t\t\t\tLog in\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t\t<div className=\"text-center\">\r\n\t\t\t\t\t\t<Link to='/RegisterPage'>\r\n\t\t\t\t\t\t\t<a>Sign up</a>\r\n\t\t\t\t\t\t</Link>\r\n\t\t\t\t\t\t<span className=\"p-2\">|</span>\r\n\t\t\t\t\t\t<Link to='/Forgot-password'>\r\n\t\t\t\t\t\t\t<a>Forgot Password</a>\r\n\t\t\t\t\t\t</Link>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</Form>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default LoginPage;\r\n","import React ,{Component}from 'react';\r\nimport MoviePage from './MoviePage.js';\r\nimport './LoginPage.css';\r\nimport {Button , Form , FormGroup, Label, Input} from 'reactstrap';\r\nimport {Link} from 'react-router-dom';\r\n\r\nclass RegisterPage extends Component {\r\n\r\n\tconstructor(props){\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\temail: '',\r\n\t\t\tpassword:'',\r\n\t\t\tname:''\r\n\t\t}\r\n\t}\r\n\r\n\tonEmailChange(event){\r\n\t\tthis.setState({email :event.target.value})\r\n\t}\r\n\r\n\tonPasswordChange(event){\r\n\t\tthis.setState({password :event.target.value})\t\r\n\t}\r\n\r\n\tonNameChange(event){\r\n\t\tthis.setState({name :event.target.value})\r\n\t}\r\n\r\n\tmoveToSite(){\r\n\t\tfetch('https://search-movies-app.herokuapp.com/register',{\r\n\t\t\tmethod: 'post',\r\n\t\t\theaders: {'Content-Type':'application/json'},\r\n\t\t\tbody:JSON.stringify({\r\n\t\t\t\temail: this.state.email,\r\n\t\t\t\tpassword: this.state.password,\t\t\t\t\r\n\t\t\t\tname: this.state.name\t\t\t\t\r\n\t\t\t})\r\n\t\t})\r\n\t\t.then(response => response.json())\r\n\t\t.then(user=> {\r\n\t\t\tif (user.id) {\r\n\t\t\t\t//this.props.loadUser(user)\r\n\t\t\t\tthis.props.history.push('/MoviePage');\t\r\n\t\t\t}\r\n\t\t\telse{\r\n\t\t\t\tthis.props.history.push('/ErorPage');\t\r\n\t\t\t}\r\n\t\t})\r\n\t}\r\n\r\n    render(){\r\n      return(\r\n      \t<Form className=\"Login-form\">\r\n\t        <h1 className=\"text-center\">\r\n\t        \t<span className=\"font-weight-bold\">The Search-Movies</span>\r\n\t        </h1>\r\n\t        <h2 className=\"text-center\">Welcome </h2>\r\n\t        <FormGroup>\r\n\t        \t<Label>Name</Label>\r\n\t        \t<Input type=\"text\" placeholder=\"Name\" id=\"inputName\" onChange={this.onNameChange.bind(this)}/>\r\n\t        </FormGroup>\r\n\t        <FormGroup>\r\n\t        \t<Label>Email</Label>\r\n\t        \t<Input type=\"email\" placeholder=\"Email\" id=\"inputEmail\" onChange={this.onEmailChange.bind(this)}/>\r\n\t        </FormGroup>\r\n\t        <FormGroup>\r\n\t        \t<Label>Password</Label>\r\n\t        \t<Input type=\"password\" placeholder=\"Password\" id=\"inputPassword\" onChange={this.onPasswordChange.bind(this)}/>\r\n\t        </FormGroup>\r\n\t       \t<Button className=\"btn-lg btn-dark btn-block\" onClick={this.moveToSite.bind(this)}>\r\n\t       \tRegister\r\n\t       \t</Button>\t       \r\n\t       \t<div className=\"text-center\">\r\n\t       \t\t<Link to='/'>\r\n\t       \t\t\t<a>Sign in with your account</a>\r\n\t       \t\t</Link>   \t\t\t\t\r\n\t       \t</div>\t   \r\n        </Form>\r\n      );\r\n  }\r\n}\r\n\r\nexport default RegisterPage;\r\n","import React ,{Component}from 'react';\r\nimport {Link} from 'react-router-dom';\r\nclass ErorPage extends Component {\r\n\t\r\n    render(){\r\n      return(      \t\r\n        <div>\r\n\t        <h1>\r\n\t        \t<span className=\"font-weight-bold\">eror 404</span> \r\n\t        </h1>    \r\n\t        <Link to=\"/\">Go back</Link>\r\n        </div>\r\n      );\r\n  }\r\n}\r\n\r\nexport default ErorPage;\r\n","import React ,{Component}from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport MoviePage from './components/MoviePage.js';\nimport LoginPage from './components/LoginPage.js';\nimport registerPage from './components/RegisterPage.js';\nimport ErorPage from './components/ErorPage.js';\nimport {HashRouter as Router ,Switch, Route , Link} from 'react-router-dom';\n\nclass App extends Component {\n\n    render(){\n      return(\n        <Router history={Router}>\n          <Switch>\n            <Route exact path=\"/\" component={LoginPage}/>  \n            <Route exact path=\"/RegisterPage\" component={registerPage} />  \n            <Route path=\"/MoviePage\" component={MoviePage}/>\n            <Route path=\"/ErorPage\" component={ErorPage}/>\n          </Switch>\n        </Router>  \n      );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport 'bootstrap/dist/css/bootstrap.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}