{"version":3,"sources":["logo.svg","assets/Space.png","components/CardItem.js","components/CardList.js","components/MoviePage.js","components/LoginPage.js","components/RegisterPage.js","components/ErorPage.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","CardItem","props","state","moreText","poster_src","viewMovie","bind","showMore","url","this","movieID","window","location","href","p","document","getElementById","innerHTML","overview","substring","myLi","li","length","Card","className","bg","text","style","width","height","margin","flex","Img","variant","src","poster_path","Body","Title","title","Text","id","onClick","Button","Footer","release_date","Component","CardList","moviesCard","cardList","map","movieCard","i","Col","sm","classclassName","Container","Row","MoviePage","top_rated","rows","performSearch","searchChangeHandler","searchTerm","setState","fetch","then","response","json","results","event","target","value","top","Navbar","expand","sticky","Brand","color","Toggle","aria-controls","Collapse","Form","inline","FormControl","onChange","type","placeholder","Spinner","animation","role","size","particlesOptions","particles","number","density","enable","value_area","LoginPage","signInEmail","signInPassword","spinnerOn","moveToSite","onPasswordChange","onEmailChange","method","headers","body","JSON","stringify","email","password","user","history","push","params","FormGroup","Label","Input","to","RegisterPage","name","onNameChange","ErorPage","App","Router","exact","path","component","registerPage","Boolean","hostname","match","ReactDOM","render","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.77eb4977.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.25bf045c.svg\";","module.exports = __webpack_public_path__ + \"static/media/Space.8ce42c36.png\";","import React, { Component } from \"react\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport Card from \"react-bootstrap/Card\";\r\n\r\nexport default class CardItem extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      moreText: true,\r\n      poster_src: this.props.poster_src\r\n    };\r\n    this.viewMovie = this.viewMovie.bind(this);\r\n    this.showMore = this.showMore.bind(this);\r\n  }\r\n\r\n  viewMovie() {\r\n    const url = \"https://www.themoviedb.org/movie/\" + this.props.movieID;\r\n    window.location.href = url;\r\n  }\r\n\r\n  showMore() {\r\n    var p = document.getElementById(this.props.movieID);\r\n    var li = document.getElementById(\"link\" + this.props.movieID);\r\n    if (this.state.moreText === true) {\r\n      this.state.moreText = false;\r\n      p.innerHTML = this.props.overview;\r\n    } else {\r\n      p.innerHTML = this.props.overview.substring(0, 150) + \"...more\";\r\n\r\n      this.state.moreText = true;\r\n    }\r\n  }\r\n\r\n  shrinkOverview() {\r\n    var p = document.getElementById(this.props.movieID);\r\n    p.innerHTML = this.props.overview.substring(0, 150);\r\n  }\r\n\r\n  componentDidMount() {\r\n    var overview = this.props.overview.substring(0, 150);\r\n    var myLi = \"link\" + this.props.movieID;\r\n    var li = document.getElementById(myLi);\r\n    var p = document.getElementById(this.props.movieID);\r\n\r\n    if (this.props.overview.length > 200) {\r\n      li.innerHTML = \"...more\";\r\n    } else {\r\n      li.innerHTML = \"\";\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Card\r\n        className=\"card\"\r\n        bg=\"light\"\r\n        text=\"black\"\r\n        style={{ width: \"16rem\", height: \"45rem\", margin: \"10px\", flex: 1 }}\r\n      >\r\n        <Card.Img\r\n          variant=\"top\"\r\n          src={\r\n            (this.state.poster_src =\r\n              \"https://image.tmdb.org/t/p/w185\" + this.props.poster_path)\r\n          }\r\n        />\r\n        <Card.Body>\r\n          <Card.Title>{this.props.title}</Card.Title>\r\n          <Card.Text>\r\n            <p id={this.props.movieID} onClick={this.showMore}>\r\n              {this.props.overview.substring(0, 150)}\r\n              <il id={\"link\" + this.props.movieID} href=\"#\">\r\n                ...more\r\n              </il>\r\n            </p>\r\n          </Card.Text>\r\n          <Button variant=\"primary\" onClick={this.viewMovie}>\r\n            View\r\n          </Button>\r\n        </Card.Body>\r\n        <Card.Footer>\r\n          <small className=\"text-muted\">\r\n            Release Date: {this.props.release_date}\r\n          </small>\r\n        </Card.Footer>\r\n      </Card>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport \"./CardList.css\";\r\nimport { Col, Row, Container } from \"react-bootstrap\";\r\nimport Card from \"react-bootstrap/Card\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport CardItem from \"./CardItem\";\r\n\r\nexport default class CardList extends Component {\r\n  render() {\r\n    let moviesCard = this.props.cardList.map((movieCard, i) => {\r\n      return (\r\n        <Col sm={3}>\r\n          <CardItem\r\n            classclassName=\"card\"\r\n            poster_src={movieCard.poster_src}\r\n            poster_path={movieCard.poster_path}\r\n            title={movieCard.title}\r\n            overview={movieCard.overview}\r\n            release_date={movieCard.release_date}\r\n            movieID={movieCard.id}\r\n          />\r\n        </Col>\r\n      );\r\n    });\r\n\r\n    return (\r\n      <Container>\r\n        <Row>{moviesCard}</Row>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport CardList from \"./CardList.js\";\r\nimport Spinner from \"react-bootstrap/Spinner\";\r\nimport \"./MoviePage.css\";\r\nimport Space from \"../assets/Space.png\";\r\nimport Navbar from \"react-bootstrap/Navbar\";\r\nimport { NavDropdown, Nav, FormControl, Form } from \"react-bootstrap\";\r\nimport { Button } from \"reactstrap\";\r\n\r\nclass MoviePage extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      top_rated: true,\r\n      rows: []\r\n    };\r\n    this.performSearch(\"\");\r\n    this.searchChangeHandler = this.searchChangeHandler.bind(this);\r\n  }\r\n\r\n  performSearch(searchTerm) {\r\n    let url;\r\n\r\n    if (searchTerm === null || searchTerm === \"\") {\r\n      this.setState({ top_rated: true });\r\n      url =\r\n        \"https://api.themoviedb.org/3/movie/top_rated?api_key=6d33d7313e2e4565a9681b4714dd4dc7&language=en-US&page=1\";\r\n    } else {\r\n      this.setState({ top_rated: false });\r\n      url =\r\n        \"https://api.themoviedb.org/3/search/movie?&api_key=6d33d7313e2e4565a9681b4714dd4dc7&query=\" +\r\n        searchTerm;\r\n    }\r\n    fetch(url)\r\n      .then(response => response.json())\r\n      .then(rows => {\r\n        this.setState({ rows: rows.results });\r\n      });\r\n  }\r\n\r\n  searchChangeHandler(event) {\r\n    const boundObject = this;\r\n    const searchTerm = event.target.value;\r\n    boundObject.performSearch(searchTerm);\r\n  }\r\n  render() {\r\n    var top;\r\n    this.state.top_rated ? (top = \"Top Rated\") : (top = \"\");\r\n\r\n    if (!this.state.rows.length) {\r\n      return (\r\n        <div className=\"text-center\">\r\n          <Spinner animation=\"border\" role=\"status\" size=\"\">\r\n            <span className=\"sr-only \">Loading...</span>\r\n          </Spinner>\r\n        </div>\r\n      );\r\n    }\r\n\r\n    return (\r\n      <div className=\"App\">\r\n        {/*  <table className=\"titleBar\">\r\n          <tbody>\r\n            <tr>\r\n              <td>\r\n                <img className=\"App-logo\" src=\"logo192.png\" />\r\n              </td>\r\n              <td width=\"8\"></td>\r\n            </tr>\r\n          </tbody>\r\n        </table> */}\r\n\r\n        <Navbar bg=\"dark\" expand=\"lg\" sticky=\"top\">\r\n          <Navbar.Brand style={{ color: \"white\" }}>Movie Time</Navbar.Brand>\r\n          <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n          <Navbar.Collapse id=\"basic-navbar-nav\">\r\n            <Form inline>\r\n              <FormControl\r\n                onChange={this.searchChangeHandler}\r\n                type=\"text\"\r\n                placeholder=\"Search\"\r\n                className=\"mr-sm-1\"\r\n              />\r\n            </Form>\r\n          </Navbar.Collapse>\r\n        </Navbar>\r\n\r\n        <h2 style={{ color: \"white\" }} id=\"top\">\r\n          {top}\r\n        </h2>\r\n\r\n        <CardList cardList={this.state.rows} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default MoviePage;\r\n","import React, { Component } from \"react\";\r\nimport MoviePage from \"./MoviePage.js\";\r\nimport \"./LoginPage.css\";\r\nimport { Button, Form, FormGroup, Label, Input } from \"reactstrap\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Particles from \"react-particles-js\";\r\nimport Spinner from \"react-bootstrap/Spinner\";\r\n\r\nconst particlesOptions = {\r\n  particles: {\r\n    number: {\r\n      value: 30,\r\n      density: {\r\n        enable: true,\r\n        value_area: 200\r\n      }\r\n    }\r\n  }\r\n};\r\n\r\nclass LoginPage extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      signInEmail: \"\",\r\n      signInPassword: \"\",\r\n      spinnerOn: false\r\n    };\r\n    this.moveToSite = this.moveToSite.bind(this);\r\n    this.onPasswordChange = this.onPasswordChange.bind(this);\r\n    this.onEmailChange = this.onEmailChange.bind(this);\r\n  }\r\n\r\n  onEmailChange(event) {\r\n    this.setState({ signInEmail: event.target.value });\r\n  }\r\n\r\n  onPasswordChange(event) {\r\n    this.setState({ signInPassword: event.target.value });\r\n  }\r\n\r\n  moveToSite() {\r\n    fetch(\"https://search-movies-app.herokuapp.com/signin\", {\r\n      method: \"post\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({\r\n        email: this.state.signInEmail,\r\n        password: this.state.signInPassword\r\n      })\r\n    })\r\n      .then(response => response.json())\r\n      .then(user => {\r\n        if (user.id) {\r\n          //this.props.loadUser(user)\r\n          this.props.history.push(\"/MoviePage\");\r\n        } else {\r\n          this.props.history.push(\"/ErorPage\");\r\n        }\r\n      });\r\n  }\r\n\r\n  render() {\r\n    if (this.state.spinnerOn) {\r\n      return (\r\n        <Spinner\r\n          animation=\"border\"\r\n          role=\"status\"\r\n          size=\"\"\r\n          className=\"d-flex justify-content-center\"\r\n        >\r\n          <span className=\"sr-only justify-content-center\">Loading...</span>\r\n        </Spinner>\r\n      );\r\n    }\r\n\r\n    return (\r\n      <div className=\"login-page\">\r\n        <Particles className=\"particles\" params={particlesOptions} />\r\n        <Form className=\"Login-form\">\r\n          <h1 className=\"text-center text-white\">\r\n            <span className=\"font-weight-bold \">Movie Time</span>\r\n          </h1>\r\n          <h2 className=\"text-center text-white\">Welcome </h2>\r\n          <FormGroup>\r\n            <Label className=\"text-white\">Email</Label>\r\n            <Input\r\n              type=\"email\"\r\n              placeholder=\"Email\"\r\n              id=\"inputEmail\"\r\n              onChange={this.onEmailChange}\r\n            />\r\n          </FormGroup>\r\n          <FormGroup>\r\n            <Label className=\"text-white\">Password</Label>\r\n            <Input\r\n              type=\"password\"\r\n              placeholder=\"Password\"\r\n              id=\"inputPassword\"\r\n              onChange={this.onPasswordChange}\r\n            />\r\n          </FormGroup>\r\n          <Button\r\n            className=\"btn-lg btn-dark btn-block\"\r\n            onClick={this.moveToSite}\r\n          >\r\n            Log in\r\n          </Button>\r\n          <div className=\"text-center\">\r\n            <Link to=\"/RegisterPage\">\r\n              <a>Sign up</a>\r\n            </Link>\r\n            <span className=\"p-2\">|</span>\r\n            <Link /* to='/Forgot-password' */>\r\n              <a>Forgot Password</a>\r\n            </Link>\r\n          </div>\r\n        </Form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default LoginPage;\r\n","import React ,{Component}from 'react';\r\nimport MoviePage from './MoviePage.js';\r\nimport './LoginPage.css';\r\nimport {Button , Form , FormGroup, Label, Input} from 'reactstrap';\r\nimport {Link} from 'react-router-dom';\r\n\r\nclass RegisterPage extends Component {\r\n\r\n\tconstructor(props){\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\temail: '',\r\n\t\t\tpassword:'',\r\n\t\t\tname:''\r\n\t\t}\r\n\t}\r\n\r\n\tonEmailChange(event){\r\n\t\tthis.setState({email :event.target.value})\r\n\t}\r\n\r\n\tonPasswordChange(event){\r\n\t\tthis.setState({password :event.target.value})\t\r\n\t}\r\n\r\n\tonNameChange(event){\r\n\t\tthis.setState({name :event.target.value})\r\n\t}\r\n\r\n\tmoveToSite(){\r\n\t\tfetch('https://search-movies-app.herokuapp.com/register',{\r\n\t\t\tmethod: 'post',\r\n\t\t\theaders: {'Content-Type':'application/json'},\r\n\t\t\tbody:JSON.stringify({\r\n\t\t\t\temail: this.state.email,\r\n\t\t\t\tpassword: this.state.password,\t\t\t\t\r\n\t\t\t\tname: this.state.name\t\t\t\t\r\n\t\t\t})\r\n\t\t})\r\n\t\t.then(response => response.json())\r\n\t\t.then(user=> {\r\n\t\t\tif (user.id) {\r\n\t\t\t\t//this.props.loadUser(user)\r\n\t\t\t\tthis.props.history.push('/MoviePage');\t\r\n\t\t\t}\r\n\t\t\telse{\r\n\t\t\t\tthis.props.history.push('/ErorPage');\t\r\n\t\t\t}\r\n\t\t})\r\n\t}\r\n\r\n    render(){\r\n      return(\r\n      \t<Form className=\"Login-form\">\r\n\t        <h1 className=\"text-center\">\r\n\t        \t<span className=\"font-weight-bold\">The Search-Movies</span>\r\n\t        </h1>\r\n\t        <h2 className=\"text-center\">Welcome </h2>\r\n\t        <FormGroup>\r\n\t        \t<Label>Name</Label>\r\n\t        \t<Input type=\"text\" placeholder=\"Name\" id=\"inputName\" onChange={this.onNameChange.bind(this)}/>\r\n\t        </FormGroup>\r\n\t        <FormGroup>\r\n\t        \t<Label>Email</Label>\r\n\t        \t<Input type=\"email\" placeholder=\"Email\" id=\"inputEmail\" onChange={this.onEmailChange.bind(this)}/>\r\n\t        </FormGroup>\r\n\t        <FormGroup>\r\n\t        \t<Label>Password</Label>\r\n\t        \t<Input type=\"password\" placeholder=\"Password\" id=\"inputPassword\" onChange={this.onPasswordChange.bind(this)}/>\r\n\t        </FormGroup>\r\n\t       \t<Button className=\"btn-lg btn-dark btn-block\" onClick={this.moveToSite.bind(this)}>\r\n\t       \tRegister\r\n\t       \t</Button>\t       \r\n\t       \t<div className=\"text-center\">\r\n\t       \t\t<Link to='/'>\r\n\t       \t\t\t<a>Sign in with your account</a>\r\n\t       \t\t</Link>   \t\t\t\t\r\n\t       \t</div>\t   \r\n        </Form>\r\n      );\r\n  }\r\n}\r\n\r\nexport default RegisterPage;\r\n","import React ,{Component}from 'react';\r\nimport {Link} from 'react-router-dom';\r\nclass ErorPage extends Component {\r\n\t\r\n    render(){\r\n      return(      \t\r\n        <div>\r\n\t        <h1>\r\n\t        \t<span className=\"font-weight-bold\">eror 404</span> \r\n\t        </h1>    \r\n\t        <Link to=\"/\">Go back</Link>\r\n        </div>\r\n      );\r\n  }\r\n}\r\n\r\nexport default ErorPage;\r\n","import React ,{Component}from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport MoviePage from './components/MoviePage.js';\nimport LoginPage from './components/LoginPage.js';\nimport registerPage from './components/RegisterPage.js';\nimport ErorPage from './components/ErorPage.js';\nimport {HashRouter as Router ,Switch, Route , Link} from 'react-router-dom';\n\nclass App extends Component {\n\n    render(){\n      return(\n        <Router history={Router}>\n          <Switch>\n            <Route exact path=\"/\" component={LoginPage}/>  \n            <Route exact path=\"/RegisterPage\" component={registerPage} />  \n            <Route path=\"/MoviePage\" component={MoviePage}/>\n            <Route path=\"/ErorPage\" component={ErorPage}/>\n          </Switch>\n        </Router>  \n      );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport 'bootstrap/dist/css/bootstrap.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}